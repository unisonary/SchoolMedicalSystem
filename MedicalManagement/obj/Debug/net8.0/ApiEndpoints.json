[
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "CreateUser",
    "RelativePath": "api/admin/create-account",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.UserAccount.CreateUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "ImportUsersFromExcel",
    "RelativePath": "api/admin/import-users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "createdBy",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "ResetPassword",
    "RelativePath": "api/admin/reset-password",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.UserAccount.ResetUserPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "GetUsers",
    "RelativePath": "api/admin/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "ChangePassword",
    "RelativePath": "api/Auth/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.ChangePasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Auth/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.ForgotPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "ForgotPasswordOtp",
    "RelativePath": "api/Auth/forgot-password-otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.ForgotPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "MedicalManagement.Models.DTOs.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MedicalManagement.Models.Responses.AuthResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.ResetPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "VerifyOtpReset",
    "RelativePath": "api/Auth/verify-reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.VerifyOtpResetDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerAssignmentController",
    "Method": "Assign",
    "RelativePath": "api/manager/assignments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.AssignmentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "Create",
    "RelativePath": "api/manager/plans",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalPlanCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "Get",
    "RelativePath": "api/manager/plans",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "Update",
    "RelativePath": "api/manager/plans/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalPlanUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "Delete",
    "RelativePath": "api/manager/plans/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseAppointmentController",
    "Method": "GetAll",
    "RelativePath": "api/nurse/appointments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseAppointmentController",
    "Method": "Update",
    "RelativePath": "api/nurse/appointments/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.AppointmentUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseHealthCheckupController",
    "Method": "Update",
    "RelativePath": "api/nurse/checkups/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.HealthCheckupUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseHealthCheckupController",
    "Method": "GetByPlanId",
    "RelativePath": "api/nurse/checkups/plan/{planId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseInventoryController",
    "Method": "GetAll",
    "RelativePath": "api/nurse/inventory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseInventoryController",
    "Method": "Create",
    "RelativePath": "api/nurse/inventory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.InventoryCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseInventoryController",
    "Method": "Update",
    "RelativePath": "api/nurse/inventory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.InventoryUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseInventoryController",
    "Method": "SoftDelete",
    "RelativePath": "api/nurse/inventory/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "GetAll",
    "RelativePath": "api/nurse/medical-events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "Create",
    "RelativePath": "api/nurse/medical-events",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalEventCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "GetById",
    "RelativePath": "api/nurse/medical-events/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "Update",
    "RelativePath": "api/nurse/medical-events/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalEventUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "SoftDelete",
    "RelativePath": "api/nurse/medical-events/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseMedicationController",
    "Method": "GetPendingMedications",
    "RelativePath": "api/nurse/medications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseMedicationController",
    "Method": "Verify",
    "RelativePath": "api/nurse/medications/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicationVerifyDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseSupplyLogController",
    "Method": "GetAll",
    "RelativePath": "api/nurse/supply-log",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseSupplyLogController",
    "Method": "Create",
    "RelativePath": "api/nurse/supply-log",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.SupplyLogCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseVaccinationController",
    "Method": "Get",
    "RelativePath": "api/nurse/vaccinations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseVaccinationController",
    "Method": "Update",
    "RelativePath": "api/nurse/vaccinations/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.VaccinationUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentConsentController",
    "Method": "RespondToConsent",
    "RelativePath": "api/parent/consents/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.ConsentActionDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentConsentController",
    "Method": "GetHistory",
    "RelativePath": "api/parent/consents/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentConsentController",
    "Method": "GetPending",
    "RelativePath": "api/parent/consents/pending",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "AddMedicalCondition",
    "RelativePath": "api/parent/health/medical-condition",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalConditionCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "GetMedicalConditions",
    "RelativePath": "api/parent/health/medical-condition",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "UpdateMedicalCondition",
    "RelativePath": "api/parent/health/medical-condition/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalConditionUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "DeleteMedicalCondition",
    "RelativePath": "api/parent/health/medical-condition/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "AddMedication",
    "RelativePath": "api/parent/health/medication",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicationCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "UpdateMedication",
    "RelativePath": "api/parent/health/medication/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicationUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "GetMedications",
    "RelativePath": "api/parent/health/medications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "GetMyStudents",
    "RelativePath": "api/parent/health/students",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentStudentProgressController",
    "Method": "GetHealthCheckups",
    "RelativePath": "api/parent/student/checkups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentStudentProgressController",
    "Method": "GetMedicalEvents",
    "RelativePath": "api/parent/student/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentStudentProgressController",
    "Method": "GetMedicalNotifications",
    "RelativePath": "api/parent/student/notifications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "GetAllStudents",
    "RelativePath": "api/Student",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.Entities.Student, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "CreateStudent",
    "RelativePath": "api/Student",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "student",
        "Type": "MedicalManagement.Models.Entities.Student",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MedicalManagement.Models.Entities.Student",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "GetStudent",
    "RelativePath": "api/Student/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MedicalManagement.Models.Entities.Student",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "UpdateStudent",
    "RelativePath": "api/Student/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "student",
        "Type": "MedicalManagement.Models.Entities.Student",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "DeleteStudent",
    "RelativePath": "api/Student/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentHealthController",
    "Method": "GetCheckups",
    "RelativePath": "api/student/health/checkups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.DTOs.HealthCheckupDTO, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentHealthController",
    "Method": "GetMedicalEvents",
    "RelativePath": "api/student/health/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.DTOs.MedicalEventDTO, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentHealthController",
    "Method": "GetNotifications",
    "RelativePath": "api/student/health/notifications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.DTOs.MedicalNotificationDTO, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentHealthController",
    "Method": "GetHealthRecords",
    "RelativePath": "api/student/health/records",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.DTOs.HealthRecordDTO, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentHealthController",
    "Method": "GetVaccinations",
    "RelativePath": "api/student/health/vaccinations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.DTOs.VaccinationDTO, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]