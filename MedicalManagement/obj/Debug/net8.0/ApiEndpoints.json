[
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "GetAllParents",
    "RelativePath": "api/admin/all-parents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminContentController",
    "Method": "GetBlogs",
    "RelativePath": "api/admin/blogs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminContentController",
    "Method": "AddBlog",
    "RelativePath": "api/admin/blogs",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.BlogPostDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminContentController",
    "Method": "UpdateBlog",
    "RelativePath": "api/admin/blogs/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.BlogPostDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminContentController",
    "Method": "DeleteBlog",
    "RelativePath": "api/admin/blogs/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "GetClasses",
    "RelativePath": "api/admin/classes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "CreateUser",
    "RelativePath": "api/admin/create-account",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.UserAccount.CreateUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "DeactivateUser",
    "RelativePath": "api/admin/deactivate/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminContentController",
    "Method": "GetDocuments",
    "RelativePath": "api/admin/documents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminContentController",
    "Method": "AddDocument",
    "RelativePath": "api/admin/documents",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.HealthDocumentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminContentController",
    "Method": "UpdateDocument",
    "RelativePath": "api/admin/documents/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.HealthDocumentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminContentController",
    "Method": "DeleteDocument",
    "RelativePath": "api/admin/documents/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "ImportUsersFromExcel",
    "RelativePath": "api/admin/import-users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "ResetPassword",
    "RelativePath": "api/admin/reset-password",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.UserAccount.ResetUserPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "SearchUsers",
    "RelativePath": "api/admin/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "SearchParentsByName",
    "RelativePath": "api/admin/search-parents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "UpdateUser",
    "RelativePath": "api/admin/update-user",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.UserAccount.UpdateUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AdminController",
    "Method": "GetUsers",
    "RelativePath": "api/admin/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "ChangePassword",
    "RelativePath": "api/Auth/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.ChangePasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "FirstLoginChangePassword",
    "RelativePath": "api/Auth/first-login-change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.FirstLoginChangePasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "ForgotPasswordOtp",
    "RelativePath": "api/Auth/forgot-password-otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.ForgotPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "MedicalManagement.Models.DTOs.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MedicalManagement.Models.Responses.AuthResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "VerifyOtpOnly",
    "RelativePath": "api/Auth/verify-otp-only",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.VerifyOtpOnlyDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.AuthController",
    "Method": "VerifyOtpReset",
    "RelativePath": "api/Auth/verify-reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.VerifyOtpResetDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerAssignmentController",
    "Method": "Assign",
    "RelativePath": "api/manager/assignments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.AssignmentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerAssignmentController",
    "Method": "GetConsentedStudents",
    "RelativePath": "api/manager/assignments/consented-students/{planId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerAssignmentController",
    "Method": "GetAllConsentedStudents",
    "RelativePath": "api/manager/assignments/consented-students/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.InventoryAlertController",
    "Method": "GetFilteredAlerts",
    "RelativePath": "api/manager/inventory-alerts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "alertType",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerNotificationController",
    "Method": "GetNotifications",
    "RelativePath": "api/manager/notifications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerNotificationController",
    "Method": "MarkAsRead",
    "RelativePath": "api/manager/notifications/{id}/read",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerNotificationController",
    "Method": "MarkAllAsRead",
    "RelativePath": "api/manager/notifications/mark-all-read",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "Create",
    "RelativePath": "api/manager/plans",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalPlanCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "Get",
    "RelativePath": "api/manager/plans",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "Update",
    "RelativePath": "api/manager/plans/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalPlanUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "Delete",
    "RelativePath": "api/manager/plans/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerMedicalPlanController",
    "Method": "GetClasses",
    "RelativePath": "api/manager/plans/classes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "GetHealthCheckupReport",
    "RelativePath": "api/manager/reports/health-checkup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "MedicalManagement.Models.DTOs.HealthCheckupReportFilterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "ExportHealthCheckupReport",
    "RelativePath": "api/manager/reports/health-checkup/export",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "MedicalManagement.Models.DTOs.HealthCheckupReportFilterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "GetInventoryReport",
    "RelativePath": "api/manager/reports/inventory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "MedicalManagement.Models.DTOs.InventoryReportFilterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "ExportInventoryReport",
    "RelativePath": "api/manager/reports/inventory/export",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "MedicalManagement.Models.DTOs.InventoryReportFilterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "GetParticipationReport",
    "RelativePath": "api/manager/reports/participation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "MedicalManagement.Models.DTOs.ParticipationReportFilterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "ExportParticipationReportToExcel",
    "RelativePath": "api/manager/reports/participation/export",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "GetVaccinationReport",
    "RelativePath": "api/manager/reports/vaccination",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "MedicalManagement.Models.DTOs.VaccinationReportFilterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "ExportVaccinationReport",
    "RelativePath": "api/manager/reports/vaccination/export",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "MedicalManagement.Models.DTOs.VaccinationReportFilterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerReportController",
    "Method": "GetVaccineNames",
    "RelativePath": "api/manager/reports/vaccines/names",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseAppointmentController",
    "Method": "GetAll",
    "RelativePath": "api/nurse/appointments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseAppointmentController",
    "Method": "Create",
    "RelativePath": "api/nurse/appointments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.AppointmentCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseAppointmentController",
    "Method": "Update",
    "RelativePath": "api/nurse/appointments/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.AppointmentUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseHealthCheckupController",
    "Method": "Update",
    "RelativePath": "api/nurse/checkups/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.HealthCheckupUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseHealthCheckupController",
    "Method": "GetByPlanNameAndNurse",
    "RelativePath": "api/nurse/checkups/by-plan-name",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseHealthCheckupController",
    "Method": "GetByPlanAndNurse",
    "RelativePath": "api/nurse/checkups/by-plan/{planId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseHealthCheckupController",
    "Method": "GetByPlanId",
    "RelativePath": "api/nurse/checkups/plan/{planId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseHealthCheckupController",
    "Method": "GetHealthCheckupPlanNames",
    "RelativePath": "api/nurse/checkups/plans/health-checkup-names",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseInventoryController",
    "Method": "GetAll",
    "RelativePath": "api/nurse/inventory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseInventoryController",
    "Method": "Create",
    "RelativePath": "api/nurse/inventory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.InventoryCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseInventoryController",
    "Method": "Update",
    "RelativePath": "api/nurse/inventory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.InventoryUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseInventoryController",
    "Method": "SoftDelete",
    "RelativePath": "api/nurse/inventory/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseMedicalConditionController",
    "Method": "GetMedicalConditionByStudentId",
    "RelativePath": "api/nurse/medical-condition/{studentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "studentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "GetAll",
    "RelativePath": "api/nurse/medical-events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "Create",
    "RelativePath": "api/nurse/medical-events",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalEventCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "GetById",
    "RelativePath": "api/nurse/medical-events/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "Update",
    "RelativePath": "api/nurse/medical-events/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalEventUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NurseMedicalEventController",
    "Method": "SoftDelete",
    "RelativePath": "api/nurse/medical-events/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseMedicationController",
    "Method": "GetMedicationsByStatus",
    "RelativePath": "api/nurse/medications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseMedicationController",
    "Method": "AddMedication",
    "RelativePath": "api/nurse/medications",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicationCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseMedicationController",
    "Method": "Verify",
    "RelativePath": "api/nurse/medications/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicationVerifyDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseSupplyLogController",
    "Method": "GetAll",
    "RelativePath": "api/nurse/supply-log",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseSupplyLogController",
    "Method": "Create",
    "RelativePath": "api/nurse/supply-log",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.SupplyLogCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseVaccinationController",
    "Method": "Get",
    "RelativePath": "api/nurse/vaccinations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseVaccinationController",
    "Method": "Update",
    "RelativePath": "api/nurse/vaccinations/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.VaccinationUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseVaccinationController",
    "Method": "GetByPlanAndNurse",
    "RelativePath": "api/nurse/vaccinations/by-plan/{planId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "planId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.NurseVaccinationController",
    "Method": "GetHealthCheckupPlanNames",
    "RelativePath": "api/nurse/vaccinations/plans/vaccinations-names",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ManagerAssignmentController",
    "Method": "GetNurses",
    "RelativePath": "api/nurses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentConsentController",
    "Method": "RespondToConsent",
    "RelativePath": "api/parent/consents/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.ConsentActionDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentConsentController",
    "Method": "GetHistory",
    "RelativePath": "api/parent/consents/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentConsentController",
    "Method": "GetPending",
    "RelativePath": "api/parent/consents/pending",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "AddMedicalCondition",
    "RelativePath": "api/parent/health/medical-condition",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalConditionCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "GetMedicalConditions",
    "RelativePath": "api/parent/health/medical-condition",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "UpdateMedicalCondition",
    "RelativePath": "api/parent/health/medical-condition/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicalConditionUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "DeleteMedicalCondition",
    "RelativePath": "api/parent/health/medical-condition/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "AddMedication",
    "RelativePath": "api/parent/health/medication",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicationCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "UpdateMedication",
    "RelativePath": "api/parent/health/medication/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MedicalManagement.Models.DTOs.MedicationUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "GetMedications",
    "RelativePath": "api/parent/health/medications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentHealthController",
    "Method": "GetMyStudents",
    "RelativePath": "api/parent/health/students",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentStudentProgressController",
    "Method": "GetHealthCheckups",
    "RelativePath": "api/parent/student/checkups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentStudentProgressController",
    "Method": "GetMedicalEvents",
    "RelativePath": "api/parent/student/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentStudentProgressController",
    "Method": "GetMedicalNotifications",
    "RelativePath": "api/parent/student/notifications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentStudentProgressController",
    "Method": "MarkNotificationAsRead",
    "RelativePath": "api/parent/student/notifications/{id}/read",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.ParentStudentProgressController",
    "Method": "MarkAllNotificationsAsRead",
    "RelativePath": "api/parent/student/notifications/mark-all-read",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicContentController",
    "Method": "GetBlogById",
    "RelativePath": "api/public/blogs/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicContentController",
    "Method": "GetAllBlogs",
    "RelativePath": "api/public/blogs/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicContentController",
    "Method": "GetLatestBlogs",
    "RelativePath": "api/public/blogs/latest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicContentController",
    "Method": "SearchBlogs",
    "RelativePath": "api/public/blogs/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicConsentController",
    "Method": "RespondFromEmail",
    "RelativePath": "api/public/consents/respond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicContentController",
    "Method": "GetDocumentById",
    "RelativePath": "api/public/documents/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicContentController",
    "Method": "GetAllDocuments",
    "RelativePath": "api/public/documents/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicContentController",
    "Method": "GetLatestDocuments",
    "RelativePath": "api/public/documents/latest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.PublicContentController",
    "Method": "SearchDocuments",
    "RelativePath": "api/public/documents/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "GetAllStudents",
    "RelativePath": "api/Student",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.Entities.Student, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "CreateStudent",
    "RelativePath": "api/Student",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "student",
        "Type": "MedicalManagement.Models.Entities.Student",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MedicalManagement.Models.Entities.Student",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "GetStudent",
    "RelativePath": "api/Student/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MedicalManagement.Models.Entities.Student",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "UpdateStudent",
    "RelativePath": "api/Student/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "student",
        "Type": "MedicalManagement.Models.Entities.Student",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "DeleteStudent",
    "RelativePath": "api/Student/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "GetAvatar",
    "RelativePath": "api/Student/{id}/avatar",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "UploadAvatar",
    "RelativePath": "api/Student/{id}/upload-avatar",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentHealthController",
    "Method": "GetCheckups",
    "RelativePath": "api/student/health/checkups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.DTOs.HealthCheckupDTO, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentHealthController",
    "Method": "GetMedicalEvents",
    "RelativePath": "api/student/health/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.DTOs.MedicalEventDTO, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentHealthController",
    "Method": "GetVaccinations",
    "RelativePath": "api/student/health/vaccinations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MedicalManagement.Models.DTOs.VaccinationDTO, MedicalManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MedicalManagement.Controllers.StudentController",
    "Method": "SearchStudentsByName",
    "RelativePath": "api/Student/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MedicalManagement.Controllers.UserProfileController",
    "Method": "GetProfile",
    "RelativePath": "api/UserProfile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  }
]